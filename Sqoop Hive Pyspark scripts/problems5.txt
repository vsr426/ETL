Pre-Work: Please perform these steps before solving the problem
1. Login to MySQL using below commands on a fresh terminal window
    mysql -u retail_dba -p
    Password = cloudera
2. Create a replica product table and name it products_replica
    create table products_replica as select * from products
3. Add primary key to the newly created table
    alter table products_replica add primary key (product_id);
4. Add two more columns
    alter table products_replica add column (product_grade int, product_sentiment varchar(100))
5. Run below two update statements to modify the data
    update products_replica set product_grade = 1  where product_price > 500;
    update products_replica set product_sentiment  = 'WEAK'  where product_price between 300 and  500;

	Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a '|' and lines are separated by '\n'. Null values are represented as -1 for numbers and "NOT-AVAILABLE" for strings. Only records with product id greater than or equal to 1 and less than or equal to 1000 should be imported and use 3 mappers for importing. The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text. 
sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username retail_dba --password cloudera --table products_replica --fields-terminated-by "|" --lines-terminated-by "\n" --null-string "NOT-AVAILABLE" --null-non-string "-1" --where "product_id between 1 and 1000" --num-mappers 3 --target-dir "/user/cloudera/problem5/products-text" --outdir javafiles
Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a '*' and lines are separated by '\n'. Null values are represented as -1000 for numbers and "NA" for strings. Only records with product id less than or equal to 1111 should be imported and use 2 mappers for importing. The destination file should be stored as a text file to directory  /user/cloudera/problem5/products-text-part1. 
 sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username retail_dba --password cloudera --table products_replica --target-dir  /user/cloudera/problem5/products-text-part1 --fields-terminated-by '*' --lines-terminated-by '\n' --null-string 'NA' --null-non-string '-1000' --where 'product_id <=1111' --num-mappers 2 --outdir javafiles
Using sqoop, import products_replica table from MYSQL into hdfs such that fields are separated by a '*' and lines are separated by '\n'. Null values are represented as -1000 for numbers and "NA" for strings. Only records with product id greater than 1111 should be imported and use 5 mappers for importing. The destination file should be stored as a text file to directory 
sqoop import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username retail_dba --password cloudera --table products_replica --target-dir  /user/cloudera/problem5/products-text-part2 --fields-terminated-by '*' --lines-terminated-by '\n' --null-string 'NA' --null-non-string '-1000' --where 'product_id > 1111' --num-mappers 5 --outdir javafiles

Using sqoop merge data available in /user/cloudera/problem5/products-text-part1 and /user/cloudera/problem5/products-text-part2 to produce a new set of files in /user/cloudera/problem5/products-text-both-parts
/tmp/sqoop-cloudera/compile/b23975ddcafb8d2f77185ef7f80d126e/products_replica.jar
/tmp/sqoop-cloudera/compile/b23975ddcafb8d2f77185ef7f80d126e/products_replica.java

sqoop merge --new-data /user/cloudera/problem5/products-text-part2 --onto /user/cloudera/problem5/products-text-part1 --target-dir /user/cloudera/problem5/products-text-both-parts --merge-key 'product_id' --class-name products_replica --jar-file /tmp/sqoop-cloudera/compile/b23975ddcafb8d2f77185ef7f80d126e/products_replica.jar

5)
Using sqoop do the following. Read the entire steps before you create the sqoop job.
create a sqoop job Import Products_replica table as text file to directory /user/cloudera/problem5/products-incremental. Import all the records.
insert three more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
insert 2 more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
Validate to make sure the records have not be duplicated in HDFS

sqoop job --create "import_products_replica" -- import --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username retail_dba --password cloudera --table products_replica --target-dir /user/cloudera/problem5/products-incremental --incremental append --check-column product_id  --last-value 0

sqoop job --list

sqoop job --exec import_products_replica

[cloudera@quickstart ~]$ hadoop fs -ls /user/cloudera/problem5/products-incremental
Found 4 items
-rw-r--r--   1 cloudera cloudera      44758 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00000
-rw-r--r--   1 cloudera cloudera      47014 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00001
-rw-r--r--   1 cloudera cloudera      45522 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00002
-rw-r--r--   1 cloudera cloudera      50065 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00003



mysql -h quickstart.cloudera -u retail_dba -p
mysql> use retail_db
mysql> show tables;
mysql> select max(product_id) from products_replica;
+-----------------+
| max(product_id) |
+-----------------+
|            1345 |
+-----------------+


mysql>  insert into products_replica values (1346, 10, 'Cycle', 'Cycle', 100,'' , 2, 'Good');
mysql>  insert into products_replica values (1347, 10, 'Bike', 'Bike', 10000,'' , 1, 'Good');


[cloudera@quickstart ~]$ sqoop job --show import_products_replica
Warning: /usr/lib/sqoop/../accumulo does not exist! Accumulo imports will fail.
Please set $ACCUMULO_HOME to the root of your Accumulo installation.
17/07/22 16:48:49 INFO sqoop.Sqoop: Running Sqoop version: 1.4.6-cdh5.8.0
Enter password:
Job: import_products_replica
Tool: import
Options:
----------------------------
verbose = false
hcatalog.drop.and.create.table = false
incremental.last.value = 1345
db.connect.string = jdbc:mysql://quickstart.cloudera:3306/retail_db
codegen.output.delimiters.escape = 0
codegen.output.delimiters.enclose.required = false
codegen.input.delimiters.field = 0
split.limit = null
hbase.create.table = false
db.require.password = true
hdfs.append.dir = true
db.table = products_replica
codegen.input.delimiters.escape = 0
accumulo.create.table = false
import.fetch.size = null
codegen.input.delimiters.enclose.required = false
db.username = retail_dba
reset.onemapper = false
codegen.output.delimiters.record = 10
import.max.inline.lob.size = 16777216
hbase.bulk.load.enabled = false
hcatalog.create.table = false
db.clear.staging.table = false
incremental.col = product_id
codegen.input.delimiters.record = 0
enable.compression = false
hive.overwrite.table = false
hive.import = false
codegen.input.delimiters.enclose = 0
accumulo.batch.size = 10240000
hive.drop.delims = false
customtool.options.jsonmap = {}
codegen.output.delimiters.enclose = 0
hdfs.delete-target.dir = false
codegen.output.dir = .
codegen.auto.compile.dir = true
relaxed.isolation = false
mapreduce.num.mappers = 4
accumulo.max.latency = 5000
import.direct.split.size = 0
codegen.output.delimiters.field = 44
export.new.update = UpdateOnly
incremental.mode = AppendRows
hdfs.file.format = TextFile
codegen.compile.dir = /tmp/sqoop-cloudera/compile/1ee39c3a557e6154b8d31fdef8f44f0b
direct.import = false
temporary.dirRoot = _sqoop
hdfs.target.dir = /user/cloudera/problem5/products-incremental
hive.fail.table.exists = false
db.batch = false


[cloudera@quickstart ~]$ sqoop job --exec import_products_replica
[cloudera@quickstart ~]$ hadoop fs -ls /user/cloudera/problem5/products-incremental
Found 6 items
-rw-r--r--   1 cloudera cloudera      44758 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00000
-rw-r--r--   1 cloudera cloudera      47014 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00001
-rw-r--r--   1 cloudera cloudera      45522 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00002
-rw-r--r--   1 cloudera cloudera      50065 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00003
-rw-r--r--   1 cloudera cloudera         34 2017-07-22 16:50 /user/cloudera/problem5/products-incremental/part-m-00004
-rw-r--r--   1 cloudera cloudera         34 2017-07-22 16:50 /user/cloudera/problem5/products-incremental/part-m-00005


mysql> insert into products_replica values (1348, 10, 'Car', 'Car', 20000,'' , 1, 'Very Good');
mysql> insert into products_replica values (1349, 11, 'Dining Table', 'Dining Table with 4 chairs', 150,'' , 2, 'Very Good');


[cloudera@quickstart ~]$ sqoop job --exec import_products_replica

[cloudera@quickstart ~]$ hadoop fs -ls /user/cloudera/problem5/products-incremental
Found 8 items
-rw-r--r--   1 cloudera cloudera      44758 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00000
-rw-r--r--   1 cloudera cloudera      47014 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00001
-rw-r--r--   1 cloudera cloudera      45522 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00002
-rw-r--r--   1 cloudera cloudera      50065 2017-07-22 11:04 /user/cloudera/problem5/products-incremental/part-m-00003
-rw-r--r--   1 cloudera cloudera         34 2017-07-22 16:50 /user/cloudera/problem5/products-incremental/part-m-00004
-rw-r--r--   1 cloudera cloudera         34 2017-07-22 16:50 /user/cloudera/problem5/products-incremental/part-m-00005
-rw-r--r--   1 cloudera cloudera         37 2017-07-22 16:56 /user/cloudera/problem5/products-incremental/part-m-00006
-rw-r--r--   1 cloudera cloudera         67 2017-07-22 16:56 /user/cloudera/problem5/products-incremental/part-m-00007

mysql> select count(product_id), count( distinct product_id) from products_replica;
+-------------------+-----------------------------+
| count(product_id) | count( distinct product_id) |
+-------------------+-----------------------------+
|              1349 |                        1349 |
+-------------------+-----------------------------+


6)
Using sqoop do the following. Read the entire steps before you create the sqoop job.
create a hive table in database named problem5 using below command 
create table products_hive  (product_id int, product_category_id int, product_name string, product_description string, product_price float, product_imaage string,product_grade int,  product_sentiment string);
create a sqoop job Import Products_replica table as hive table to database named problem5. name the table as products_hive. 
insert three more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
insert 2 more records to Products_replica from mysql
run the sqoop job again so that only newly added records can be pulled from mysql
Validate to make sure the records have not been duplicated in Hive table


hive> create database problem5;
hive> create table problem5.products_hive  (product_id int, product_category_id int, product_name string, product_description string, product_price float, product_imaage string,product_grade int,  product_sentiment string);

hive> describe  extended products_hive;
OK
product_id              int
product_category_id     int
product_name            string
product_description     string
product_price           float
product_imaage          string
product_grade           int
product_sentiment       string

Detailed Table Information      Table(tableName:products_hive, dbName:problem5, owner:cloudera, createTime:1500768104, lastAccessTime:0, retention:0, sd:StorageDescriptor(cols:[FieldSchema(name:product_id, type:int, comment:null), FieldSchema(name:product_category_id, type:int, comment:null), FieldSchema(name:product_name, type:string, comment:null), FieldSchema(name:product_description, type:string, comment:null), FieldSchema(name:product_price, type:float, comment:null), FieldSchema(name:product_imaage, type:string, comment:null), FieldSchema(name:product_grade, type:int, comment:null), FieldSchema(name:product_sentiment, type:string, comment:null)], location:hdfs://quickstart.cloudera:8020/user/hive/warehouse/problem5.db/products_hive, inputFormat:org.apache.hadoop.mapred.TextInputFormat, outputFormat:org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat, compressed:false, numBuckets:-1, serdeInfo:SerDeInfo(name:null, serializationLib:org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe, parameters:{serialization.format=1}), bucketCols:[], sortCols:[], parameters:{}, skewedInfo:SkewedInfo(skewedColNames:[], skewedColValues:[], skewedColValueLocationMaps:{}), storedAsSubDirectories:false), partitionKeys:[], parameters:{transient_lastDdlTime=1500768104}, viewOriginalText:null, viewExpandedText:null, tableType:MANAGED_TABLE)

sqoop job --create hiveimport_products_replica -- import  --connect jdbc:mysql://quickstart.cloudera:3306/retail_db --username retail_dba --password cloudera --table products_replica --outdir javafiles --incremental append --check-column product_id --last-value 0 --hive-import --hive-table products_hive --hive-database problem5 --null-string '\\N' --null-non-string '\\N'

[cloudera@quickstart ~]$ sqoop job --exec hiveimport_products_replica

mysql> insert into products_replica values (1350, 11, 'Dinner Set', 'Dinner Set 16 Peice', 180,'' , 1, 'Very Good');
mysql> insert into products_replica values (1351, 11, 'Spoon Set', 'Spoon Set 10 Peice', 20,'' , 1, 'Very Good');

[cloudera@quickstart ~]$ sqoop job --exec hiveimport_products_replica

mysql> insert into products_replica values (1352, 9, 'Rice Cooker', 'Rice Cooker', 40,'' , 2, 'Good');
mysql> insert into products_replica values (1353, 9, 'Dish Storage Box', 'Dish Storage box', 15,'' , 2, 'Good');

[cloudera@quickstart ~]$ sqoop job --exec hiveimport_products_replica


7)
Using sqoop do the following. .
insert 2 more records into products_hive table using hive. 
create table in mysql using below command   
create table products_external  (product_id int(11) primary Key, product_grade int(11), product_category_id int(11), product_name varchar(100), product_description varchar(100), product_price float, product_impage varchar(500), product_sentiment varchar(100));
export data from products_hive (hive) table to (mysql) products_external table. 
insert 2 more records to Products_hive table from hive
export data from products_hive table to products_external table. 
Validate to make sure the records have not be duplicated in mysql table


hive> insert into table products_hive values (1354,4,'something 1354','something 2',8.00,'not avaialble',3,'NOT APPLICABLE');
hive> insert into table products_hive values (1355,4,'something 1355','something 2',8.00,'not avaialble',3,'NOT APPLICABLE');

sqoop export --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username retail_dba --password cloudera --table products_external --columns "product_id,product_category_id,product_name,product_description,product_price,product_impage,product_grade,product_sentiment" --input-fields-terminated-by '\001' --input-null-string '\\N' --input-null-non-string '\\N'  --update-mode allowinsert --update-key product_id --outdir javafiles --export-dir /user/hive/warehouse/problem5.db/products_hive
mysql> select count(1) from products_external;
+----------+
| count(1) |
+----------+
|     1355 |
+----------+

hive> insert into table products_hive values (1356,4,'something 1356','something 2',8.00,'not avaialble',3,'NOT APPLICABLE');
hive> insert into table products_hive values (1357,4,'something 1357','something 2',8.00,'not avaialble',3,'NOT APPLICABLE');

sqoop export --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username retail_dba --password cloudera --table products_external --columns "product_id,product_category_id,product_name,product_description,product_price,product_impage,product_grade,product_sentiment" --input-fields-terminated-by '\001' --input-null-string '\\N' --input-null-non-string '\\N'  --update-mode allowinsert --update-key product_id --outdir javafiles --export-dir /user/hive/warehouse/problem5.db/products_hive
mysql> select count(1) from products_external;
+----------+
| count(1) |
+----------+
|     1357 |
+----------+

sqoop job --create hiveexport_products_replica -- export --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username retail_dba --password cloudera --table products_external --columns "product_id,product_category_id,product_name,product_description,product_price,product_impage,product_grade,product_sentiment" --input-fields-terminated-by '\001' --input-null-string '\\N' --input-null-non-string '\\N'  --update-mode allowinsert --update-key product_id --outdir javafiles --export-dir /user/hive/warehouse/problem5.db/products_hive
sqoop job --exec hiveexport_products_replica